/**
 * Generated by orval v6.12.1 🍺
 * Do not edit manually.
 * Leg User API
 * OpenAPI spec version: 1.0.0
 */
import { useMutation } from '@tanstack/react-query';
import type { UseMutationOptions, MutationFunction } from '@tanstack/react-query';
import type { PaymentDto, PayCreateReq } from '.././types';
import { axiosInstance } from '../../../axios-instance';
import type { ErrorType } from '../../../axios-instance';

/**
 * @summary 결제 준비
 */
export const readyPay = (payCreateReq: PayCreateReq) => {
  return axiosInstance<PaymentDto>({
    url: `/pay/ready`,
    method: 'post',
    headers: { 'Content-Type': 'application/json' },
    data: payCreateReq,
  });
};

export type ReadyPayMutationResult = NonNullable<Awaited<ReturnType<typeof readyPay>>>;
export type ReadyPayMutationBody = PayCreateReq;
export type ReadyPayMutationError = ErrorType<unknown>;

export const useReadyPay = <TError = ErrorType<unknown>, TContext = unknown>(options?: {
  mutation?: UseMutationOptions<Awaited<ReturnType<typeof readyPay>>, TError, { data: PayCreateReq }, TContext>;
}) => {
  const { mutation: mutationOptions } = options ?? {};

  const mutationFn: MutationFunction<Awaited<ReturnType<typeof readyPay>>, { data: PayCreateReq }> = props => {
    const { data } = props ?? {};

    return readyPay(data);
  };

  return useMutation<Awaited<ReturnType<typeof readyPay>>, TError, { data: PayCreateReq }, TContext>(
    mutationFn,
    mutationOptions,
  );
};
